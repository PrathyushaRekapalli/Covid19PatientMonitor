package test;

import java.sql.*;

import org.json.simple.JSONObject;

import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.ApplicationPath;
import javax.ws.rs.Consumes;
import javax.ws.rs.core.Application;


@Path("/patient")

public class Patient {
	/*
    int patientId;
    String name,address,email,phone,sex,guardianName;
    int age,height, weight;
    Vitals vitals;
    */
    Driver driver = new Driver();
    /*
    public Patient(int patientId,String name,String address,String email,String phone,String sex,String guardianName,int age,int height, int weight, Vitals v){
        
        this.patientId = patientId;
        this.name = name;
        this.address = address;
        this.email = email;
        this.phone = phone;
        this.sex = sex;
        this.guardianName = guardianName;
        this.age = age;
        this.height = height;
        this.weight = weight;
        this.vitals = new Vitals(v);
       
    }
    
    JSONObject toJSON(){
        JSONObject obj = new JSONObject();
        
        obj.put("p_id", patientId);
        obj.put("p_name", name);
        obj.put("p_addr", address);
        obj.put("p_email", email);
        obj.put("p_phone", phone);
        obj.put("p_sex", sex);
        obj.put("p_guardian", guardianName);
        obj.put("p_age", age);
        obj.put("p_ht", height);
        obj.put("p_wt", weight);
        
        return obj;
    }
    */
	/*
	@GET
	@Produces(MediaType.APPLICATION_JSON)
    public String getPatientInfo(@QueryParam("p_id") String p_id) {
    	
    	JSONObject obj = new JSONObject();
    	
    	
    	try {
    		
    		Connection con = driver.connectDb();
    		
    		Statement stmt = con.createStatement();
    		
    		ResultSet doctor_rs = stmt.executeQuery("SELECT * FROM PATIENT WHERE patientId ="+p_id);
    		
    		if(doctor_rs.next()) {
    		
	    		obj.put("patientId",doctor_rs.getString("patientId"));
	    		obj.put("name",doctor_rs.getString("name"));
	    		obj.put("address",doctor_rs.getString("address"));
	    		obj.put("email",doctor_rs.getString("email"));
	    		obj.put("phone",doctor_rs.getString("phone"));
	    		obj.put("sex",doctor_rs.getString("sex"));
	    		obj.put("guardian",doctor_rs.getString("guardianName"));
	    		obj.put("age",doctor_rs.getString("age"));
	    		obj.put("height",doctor_rs.getString("height"));
	        	obj.put("doctorId",doctor_rs.getString("doctorId"));
	        	
	        	obj.put("error","none");
	    		con.close();
    		}
    		else {
    			obj.put("error","Check Patient ID");
    		}
    		
    	}
    	catch(Exception e) {
    		obj.clear();
    		obj.put("error", e.toString()+" (or) Check Patient ID");
    		System.out.println(e.toString());
    	}
    	
    	return obj.toString();
    }
	*/
    
	@GET
	@Produces(MediaType.APPLICATION_JSON)
    public String getPatientVitals(@QueryParam("p_id") String p_id) {
    	
    	System.out.println("check");
    	JSONObject vital_obj = new JSONObject();
    	
    	try {
    		
    		Connection con = driver.connectDb();
    		
    		Statement stmt = con.createStatement();
    		
    		ResultSet doctor_rs = stmt.executeQuery("SELECT * FROM VITALS WHERE patientId ="+p_id);
    		
    		boolean flag = true;
    		int index=1;
    		
    		while(doctor_rs.next()) {
    			
    			flag = false;
    			JSONObject obj = new JSONObject();
    			
	    		obj.put("patientId",doctor_rs.getString("patientId"));
	    		obj.put("time",doctor_rs.getString("time"));
	        	obj.put("temperature",doctor_rs.getString("temperature"));
	        	obj.put("bloodPressure",doctor_rs.getString("bloodPressure"));
	        	obj.put("respiratoryRate",doctor_rs.getString("respiratoryRate"));
	        	obj.put("heartRate",doctor_rs.getString("heartRate"));
	        	obj.put("spO2",doctor_rs.getString("spO2"));
	        	obj.put("isCritical",doctor_rs.getString("isCritical"));
	        	obj.put("message",doctor_rs.getString("message"));
	        	
	        	vital_obj.put(index++, obj);
    		}
    		
    		if(flag) {
    			vital_obj.clear();
    			vital_obj.put("error","NO VITALS TO SHOW (or) Check Patient ID");
    		}
    		else {
    			vital_obj.put("error","none");
    		}
        	
    		con.close();
    		
    	}
    	catch(Exception e) {
    		vital_obj.clear();
    		vital_obj.put("error", e.toString()+" (or) Check Patient ID");
    		System.out.println(e.toString());
    	}
    	
    	return vital_obj.toString();
    }
    @POST
    @Consumes(MediaType.APPLICATION_JSON)
    public String storeVitals(JSONObject obj) {
    	
    	JSONObject status = new JSONObject();
    	
    	try {
    		Connection con = driver.connectDb();
    		Statement stmt = con.createStatement();
    		String p_id = (String)obj.get("patientId");
    		ResultSet p_rs = stmt.executeQuery("SELECT * FROM PATIENT WHERE patientId ="+p_id);
            
    		if(p_rs.next()) {
    			
    			obj.put("name", p_rs.getString("name"));
    			obj.put("doctorId", p_rs.getString("doctorId"));
    			
    			Vitals v = new Vitals(obj);  
    			v.store();
    			status.put("error","none");
    		}
    		else {
    			status.put("error","Invalid Patient ID");
    		}
    	}
    	catch(Exception e) {
    		status.clear();
    		status.put("error", e.toString()+" (or) Check Patient ID");
    		System.out.println(e.getStackTrace()[0].toString());
    	}
    	
    	return status.toString();
    }
}
