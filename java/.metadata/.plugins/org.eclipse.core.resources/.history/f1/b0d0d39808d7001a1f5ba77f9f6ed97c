package test;

import java.sql.*;
import java.util.ArrayList;

import org.json.simple.JSONObject;

import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.ApplicationPath;
import javax.ws.rs.Consumes;
import javax.ws.rs.core.Application;

@Path("/doctor")

public class Doctor {
    
	/*
    int doctorId;
    String name,hospitalName,hospitalInfo,email,phone;
    ArrayList<Patient> patientList = new ArrayList<Patient>();
    */
    Driver driver = new Driver();
    
    /*
    public Doctor(int doctorId,String name,String hospitalName,String hospitalInfo,String email){
        this.doctorId = doctorId;
        this.name = name;
        this.hospitalName = hospitalName;
        this.hospitalInfo = hospitalInfo;
        this.email = email;
    }
    
    public Doctor(Doctor d){
        this.doctorId = d.doctorId;

        this.name = d.name;
        this.hospitalName = d.hospitalName;
        this.hospitalInfo = d.hospitalInfo;
        this.email = d.email;
    }
    
    public void addPatient(Patient p) {
    	
    	boolean flag=true;
    	
    	if(!patientList.isEmpty()) {
    		for(int i=0; i< patientList.size(); i++) {
        		
        		if(patientList.get(i).patientId == p.patientId) {
        			flag=false;
        			break;
        		}
        	}
    	}
    	
    	if(flag) 
    		patientList.add(p);
    }
    
    public void removePatient(Patient p) {
    	
    	if(!patientList.isEmpty()) {
    		for(int i=0; i< patientList.size(); i++) {
        		
        		if(patientList.get(i).patientId == p.patientId) {
        			patientList.remove(i);
        			break;
        		}
        	}
    	}
    }
    
    */
    
	@GET
	@Produces(MediaType.APPLICATION_JSON)
    public String getDoctorInfo(@QueryParam("d_id") String d_id) {
    	
    	JSONObject obj = new JSONObject();
    	
    	
    	try {
    		
    		Statement stmt = driver.connectDb();
    		ResultSet doctor_rs = stmt.executeQuery("SELECT * FROM DOCTOR WHERE doctorId ="+d_id);
    		
    		doctor_rs.next();
    		
    		obj.put("d_id",doctor_rs.getString("doctorId"));
    		obj.put("d_name",doctor_rs.getString("name"));
    		obj.put("h_name",doctor_rs.getString("hospitalName"));
    		obj.put("phone",doctor_rs.getString("phone"));
    		obj.put("h_info",doctor_rs.getString("hospitalInfo"));
    		
    		JSONObject p_obj = new JSONObject();
    		
    		ResultSet patient_rs = stmt.executeQuery("SELECT * FROM PATIENT WHERE doctorId ="+d_id);
    	
    		while(patient_rs.next()) {    			
    			p_obj.put(patient_rs.getString("patientId"),patient_rs.getString("name"));
    		}
    		
    		obj.put("patients",p_obj);
    	}
    	catch(Exception e) {
    		obj.clear();
    		obj.put("error", e.toString()+" (or) Check Doctor ID");
    		System.out.println(e.toString());
    	}
    	
    	return obj.toString();
    }
    

    @POST
    @Consumes(MediaType.APPLICATION_JSON)
    public String storePatientInfo(JSONObject obj) {
    	
    	JSONObject status = new JSONObject();
    	
    	try {
    		
    		Statement stmt = driver.connectDb();
    		
            String patientId = (String) obj.get("patientId");
            String name = (String) obj.get("name");
            String address = (String) obj.get("address");
            String email = (String) obj.get("email");
            String phone = (String) obj.get("phone");
            String sex = (String) obj.get("sex");
            String guardianName = (String) obj.get("guardianName");
            String age = (String) obj.get("age");
            String height = (String) obj.get("height");
            String weight = (String) obj.get("weight");
            
            String doctorId = (String)obj.get("doctorId");
            
            String vals = String.format("%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s",patientId,name,address,email,phone,sex,guardianName,age,height,weight,doctorId);
                    
            String sql_query = "INSERT INTO PATIENT (patientId,name,address,email,phone,sex,guardianName,age,height,weight,doctorId)" + 
            		" VALUES (" + 
            		vals+")";
            
            ResultSet p_rs = stmt.executeQuery(sql_query);
            
            obj.put("error","none");
    	}
    	catch(Exception e) {
    		obj.clear();
    		obj.put("error", e.toString()+" (or) Check Patient ID");
    		System.out.println(e.getStackTrace()[0].toString());
    	}
    	
    	return obj.toString();
    }
    

}