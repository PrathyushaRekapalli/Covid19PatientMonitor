{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sumanth\\\\OneDrive\\\\Documents\\\\react\\\\patient_monitor\\\\src\\\\components\\\\alerts.js\";\n//vitals import\n// import Details from \"../vitals2.json\"\n//api import\n// import { AxiosProvider, Request, Get, Delete, Head, Post, Put, Patch, withAxios } from 'react-axios'\nimport axios from \"axios\"; //Imports for vitals table\n\nimport React, { useState } from \"react\";\nimport { ThemeProvider, createMuiTheme, withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\"; //table fns and componenets:\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\n\nfunction createData(sNo, patientId, name, time, message) {\n  return {\n    sNo,\n    patientId,\n    name,\n    time,\n    message\n  };\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 200\n  }\n});\nexport function Alerts(props) {\n  const classes = useStyles(); //define the state hook\n\n  const [apiData, setapiData] = useState([]);\n  console.log(\"state= \", apiData); // GET API DATA:\n\n  function getApiData() {\n    // Variable to store response\n    // Make a request for a user with a given ID\n    axios.get(\"http://0f6e5988c9eb.ngrok.io/covid19_patient_monitor/notification?\", {\n      params: {\n        d_id: \"456\"\n      }\n    }).then(function (response) {\n      // handle success\n      console.log(\"API response= \", response.data); //store API response to state\n      //setapiData(response.data);\n      // console.log(\"new state= \",apiData)\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  } //read vitals data from json:\n\n\n  function read_details() {\n    //console.log(\"reached fn\")\n    //store the API data in the state by using getAPiData which invokes setapiData()\n    getApiData(); //console.log(\"jsondata= \",json_data)\n    // let Details = apiData;\n    // console.log(\"details \", Details);\n    // let item = [];\n    // for (let i = 1; i < Object.keys(Details).length; i++) {\n    //   item.push(Details[i]);\n    // }\n    // //getApiData();\n    // //console.log(\"items \",item)\n    // return item;\n  } //   let items = read_details();\n  //   const rows1 = [];\n  //   for (let i = 0; i < items.length; i++) {\n  //     rows1.push(\n  //       createData(\n  //         i + 1,\n  //         items[i].patientId,\n  //         items[i].name,\n  //         items[i].time,\n  //         items[i].message\n  //       )\n  //     );\n  //   }\n  //   console.log(\"rows= \", rows1);\n\n\n  const theme = createMuiTheme({\n    overrides: {\n      MuiTableContainer: {\n        root: {\n          width: \"1200px\",\n          marginTop: \"150px\",\n          marginLeft: \"220px\",\n          overflow: \"auto\"\n        }\n      }\n    }\n  });\n  getApiData();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/Sumanth/OneDrive/Documents/react/patient_monitor/src/components/alerts.js"],"names":["axios","React","useState","ThemeProvider","createMuiTheme","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","action","hover","createData","sNo","patientId","name","time","message","useStyles","table","minWidth","Alerts","props","classes","apiData","setapiData","console","log","getApiData","get","params","d_id","then","response","data","catch","error","read_details","overrides","MuiTableContainer","width","marginTop","marginLeft","overflow"],"mappings":"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","sourcesContent":["//vitals import\r\n\r\n// import Details from \"../vitals2.json\"\r\n//api import\r\n// import { AxiosProvider, Request, Get, Delete, Head, Post, Put, Patch, withAxios } from 'react-axios'\r\nimport axios from \"axios\";\r\n//Imports for vitals table\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n  withStyles,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n//table fns and componenets:\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(sNo, patientId, name, time, message) {\r\n  return {\r\n    sNo,\r\n    patientId,\r\n    name,\r\n    time,\r\n    message,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 200,\r\n  },\r\n});\r\n\r\nexport function Alerts(props) {\r\n  const classes = useStyles();\r\n\r\n  //define the state hook\r\n  const [apiData, setapiData] = useState([]);\r\n  console.log(\"state= \", apiData);\r\n\r\n  // GET API DATA:\r\n  function getApiData() {\r\n    // Variable to store response\r\n    // Make a request for a user with a given ID\r\n    axios\r\n      .get(\r\n        \"http://0f6e5988c9eb.ngrok.io/covid19_patient_monitor/notification?\",\r\n        {\r\n          params: {\r\n            d_id: \"456\",\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        // handle success\r\n        console.log(\"API response= \", response.data);\r\n        //store API response to state\r\n        //setapiData(response.data);\r\n        // console.log(\"new state= \",apiData)\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  //read vitals data from json:\r\n  function read_details() {\r\n    //console.log(\"reached fn\")\r\n    //store the API data in the state by using getAPiData which invokes setapiData()\r\n    getApiData();\r\n    //console.log(\"jsondata= \",json_data)\r\n    // let Details = apiData;\r\n    // console.log(\"details \", Details);\r\n    // let item = [];\r\n    // for (let i = 1; i < Object.keys(Details).length; i++) {\r\n    //   item.push(Details[i]);\r\n    // }\r\n    // //getApiData();\r\n    // //console.log(\"items \",item)\r\n    // return item;\r\n  }\r\n\r\n  //   let items = read_details();\r\n  //   const rows1 = [];\r\n  //   for (let i = 0; i < items.length; i++) {\r\n  //     rows1.push(\r\n  //       createData(\r\n  //         i + 1,\r\n  //         items[i].patientId,\r\n  //         items[i].name,\r\n  //         items[i].time,\r\n  //         items[i].message\r\n  //       )\r\n  //     );\r\n  //   }\r\n  //   console.log(\"rows= \", rows1);\r\n\r\n  const theme = createMuiTheme({\r\n    overrides: {\r\n      MuiTableContainer: {\r\n        root: {\r\n          width: \"1200px\",\r\n          marginTop: \"150px\",\r\n          marginLeft: \"220px\",\r\n          overflow: \"auto\",\r\n        },\r\n      },\r\n    },\r\n  });\r\n  getApiData();\r\n  return (\r\n    <div>\r\n      {/* {window.location.href==\"http://localhost:3000/vitals\"&& */}\r\n      {/* <ThemeProvider theme={theme}>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"customized table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell align=\"right\">Log No.</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Patient ID</StyledTableCell>\r\n                <StyledTableCell>Name</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Log Time</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Note</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows1.map((row) => (\r\n                <StyledTableRow key={row.name}> */}\r\n      {/* <StyledTableCell component=\"th\" scope=\"row\">{row.name}</StyledTableCell> */}\r\n      {/* <StyledTableCell align=\"right\">{row.sNo}</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    {row.patientId}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    {row.bloodPressure}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    {row.respiratoryRate}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    {row.heartRate}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">{row.spO2}</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    {row.temperature}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    {row.isCritical}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">{row.time}</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">{row.message}</StyledTableCell>\r\n                </StyledTableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </ThemeProvider> */}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}