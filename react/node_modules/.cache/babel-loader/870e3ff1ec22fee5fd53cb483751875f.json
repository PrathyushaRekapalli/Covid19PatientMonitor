{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sumanth\\\\OneDrive\\\\Documents\\\\react\\\\patient_monitor\\\\src\\\\components\\\\alerts.js\";\n//vitals import\n// import Details from \"../vitals2.json\"\n//api import\n// import { AxiosProvider, Request, Get, Delete, Head, Post, Put, Patch, withAxios } from 'react-axios'\nimport axios from \"axios\"; //Imports for vitals table\n\nimport React, { useState } from \"react\";\nimport { ThemeProvider, createMuiTheme, withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\"; //table fns and componenets:\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\n\nfunction createData(sNo, patientId, name, time, message) {\n  return {\n    sNo,\n    patientId,\n    name,\n    time,\n    message\n  };\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 200\n  }\n});\nexport function AlertTable(props) {\n  const classes = useStyles(); //define the state hook\n\n  const [apiData, setapiData] = useState([]);\n  console.log(\"state= \", apiData); // GET API DATA:\n\n  function getApiData() {\n    // Variable to store response\n    // Make a request for a user with a given ID\n    axios.get(\"http://0f6e5988c9eb.ngrok.io/covid19_patient_monitor/notification\", {\n      params: {\n        d_id: this.props.match.params[\"d_id\"]\n      }\n    }).then(function (response) {\n      // handle success\n      //console.log(\"API response= \", response.data);\n      //store API response to state\n      setapiData(response.data); // console.log(\"new state= \",apiData)\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  } //read vitals data from json:\n\n\n  function read_details() {\n    //console.log(\"reached fn\")\n    //store the API data in the state by using getAPiData which invokes setapiData()\n    getApiData(); //console.log(\"jsondata= \",json_data)\n\n    let Details = apiData;\n    console.log(\"details \", Details);\n    let item = [];\n\n    for (let i = 1; i < Object.keys(Details).length; i++) {\n      item.push(Details[i]);\n    } //getApiData();\n\n\n    console.log(\"items \", item);\n    return item;\n  }\n\n  let items = read_details();\n  const rows1 = [];\n\n  for (let i = 0; i < items.length; i++) {\n    rows1.push(createData(i + 1, items[i].patientId, items[i].name, items[i].time, items[i].message));\n  }\n\n  console.log(\"rows= \", rows1);\n  const theme = createMuiTheme({\n    overrides: {\n      MuiTableContainer: {\n        root: {\n          width: \"1200px\",\n          marginTop: \"100px\",\n          marginLeft: \"220px\",\n          overflow: \"auto\"\n        }\n      }\n    }\n  }); //   getApiData();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"customized table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, \"Log No.\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, \"Patient ID\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, \"Log Time\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, \"Message\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, rows1.map(row => /*#__PURE__*/React.createElement(StyledTableRow, {\n    key: row.patientId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }\n  }, row.sNo), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }\n  }, row.patientId), /*#__PURE__*/React.createElement(StyledTableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 19\n    }\n  }, row.name), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, row.time), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }\n  }, row.message))))))));\n}","map":{"version":3,"sources":["C:/Users/Sumanth/OneDrive/Documents/react/patient_monitor/src/components/alerts.js"],"names":["axios","React","useState","ThemeProvider","createMuiTheme","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","action","hover","createData","sNo","patientId","name","time","message","useStyles","table","minWidth","AlertTable","props","classes","apiData","setapiData","console","log","getApiData","get","params","d_id","match","then","response","data","catch","error","read_details","Details","item","i","Object","keys","length","push","items","rows1","overrides","MuiTableContainer","width","marginTop","marginLeft","overflow","map","row"],"mappings":"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","sourcesContent":["//vitals import\r\n\r\n// import Details from \"../vitals2.json\"\r\n//api import\r\n// import { AxiosProvider, Request, Get, Delete, Head, Post, Put, Patch, withAxios } from 'react-axios'\r\nimport axios from \"axios\";\r\n//Imports for vitals table\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n  withStyles,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n//table fns and componenets:\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(sNo, patientId, name, time, message) {\r\n  return {\r\n    sNo,\r\n    patientId,\r\n    name,\r\n    time,\r\n    message,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 200,\r\n  },\r\n});\r\n\r\nexport function AlertTable(props) {\r\n  const classes = useStyles();\r\n\r\n  //define the state hook\r\n  const [apiData, setapiData] = useState([]);\r\n  console.log(\"state= \", apiData);\r\n\r\n  // GET API DATA:\r\n  function getApiData() {\r\n    // Variable to store response\r\n    // Make a request for a user with a given ID\r\n    axios\r\n      .get(\r\n        \"http://0f6e5988c9eb.ngrok.io/covid19_patient_monitor/notification\",\r\n        {\r\n          params: {\r\n            d_id: this.props.match.params[\"d_id\"],\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        // handle success\r\n        //console.log(\"API response= \", response.data);\r\n        //store API response to state\r\n        setapiData(response.data);\r\n        // console.log(\"new state= \",apiData)\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  //read vitals data from json:\r\n  function read_details() {\r\n    //console.log(\"reached fn\")\r\n    //store the API data in the state by using getAPiData which invokes setapiData()\r\n    getApiData();\r\n    //console.log(\"jsondata= \",json_data)\r\n    let Details = apiData;\r\n    console.log(\"details \", Details);\r\n    let item = [];\r\n    for (let i = 1; i < Object.keys(Details).length; i++) {\r\n      item.push(Details[i]);\r\n    }\r\n    //getApiData();\r\n    console.log(\"items \", item);\r\n    return item;\r\n  }\r\n\r\n  let items = read_details();\r\n  const rows1 = [];\r\n  for (let i = 0; i < items.length; i++) {\r\n    rows1.push(\r\n      createData(\r\n        i + 1,\r\n        items[i].patientId,\r\n        items[i].name,\r\n        items[i].time,\r\n        items[i].message\r\n      )\r\n    );\r\n  }\r\n  console.log(\"rows= \", rows1);\r\n\r\n  const theme = createMuiTheme({\r\n    overrides: {\r\n      MuiTableContainer: {\r\n        root: {\r\n          width: \"1200px\",\r\n          marginTop: \"100px\",\r\n          marginLeft: \"220px\",\r\n          overflow: \"auto\",\r\n        },\r\n      },\r\n    },\r\n  });\r\n  //   getApiData();\r\n  return (\r\n    <div>\r\n      {/* {window.location.href==\"http://localhost:3000/vitals\"&& */}\r\n      <ThemeProvider theme={theme}>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"customized table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell align=\"right\">Log No.</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Patient ID</StyledTableCell>\r\n                <StyledTableCell>Name</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Log Time</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Message</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows1.map((row) => (\r\n                <StyledTableRow key={row.patientId}>\r\n                  <StyledTableCell align=\"right\">{row.sNo}</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    {row.patientId}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.name}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">{row.time}</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">{row.message}</StyledTableCell>\r\n                </StyledTableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}