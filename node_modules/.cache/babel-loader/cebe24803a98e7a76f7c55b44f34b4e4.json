{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sumanth\\\\OneDrive\\\\Documents\\\\react\\\\patient_monitor\\\\src\\\\components\\\\pattabletemp.js\";\nimport axios from \"axios\";\nimport React, { Component, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { Editable } from \"./tablefunction\";\nexport class PatTableTemp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.create_object = () => {\n      return {\n        name: 0,\n        patientId: 0,\n        email: 0,\n        password: 0,\n        address: 0,\n        phone: 0,\n        sex: 0,\n        guardianName: 0,\n        age: 0,\n        height: 0,\n        weight: 0,\n        doctorId: 0\n      };\n    };\n\n    this.add_data = (data, newData) => {\n      console.log(\"state in add data\", this.state);\n      this.setState({ ...this.state,\n        x: false\n      });\n      let arr = data;\n      arr.push(newData);\n      this.setState({ ...this.state,\n        table_data: arr\n      });\n      console.log(\"state in add data\", this.state);\n      this.setState({ ...this.state,\n        x: true\n      });\n    };\n\n    this.state = {\n      x: true,\n      table_data: [],\n      columns: [{\n        title: \"Name\",\n        field: \"name\"\n      }, {\n        title: \"Patient ID\",\n        field: \"patientId\"\n      }, {\n        title: \"Email\",\n        field: \"email\"\n      }, {\n        title: \"Address\",\n        field: \"address\"\n      }, {\n        title: \"Phone Number\",\n        field: \"phone\"\n      }, {\n        title: \"Gender\",\n        field: \"sex\"\n      }, {\n        title: \"Name of Guardian\",\n        field: \"guardianName\"\n      }, {\n        title: \"Age\",\n        field: \"age\"\n      }, {\n        title: \"Height\",\n        field: \"height\"\n      }, {\n        title: \"Weight\",\n        field: \"weight\"\n      }, {\n        title: \"Doctor ID\",\n        field: \"doctorId\"\n      }],\n      data: this.table_data // {\n      //   name: \"sumo\",\n      //   patientId: \"12\",\n      //   email: \"@.com\",\n      //   address: \"teynampet\",\n      //   phone: \"12\",\n      //   sex: \"male\",\n      //   guardianName: \"cba\",\n      //   age: \"18\",\n      //   height: \"12\",\n      //   weight: \"45\",\n      //   doctorId: \"619\",\n      // },\n\n    };\n    this.add_data = this.add_data.bind(this); // this.formatApiData = this.formatApiData.bind(this);\n  }\n\n  getApiData() {\n    axios.get(this.props.url + \"covid19_patient_monitor/get_info\", {\n      params: {\n        a_id: \"ADMIN123\"\n      }\n    }).then(response => {\n      console.log(\"api response \", response.data.patients); // this.setState({\n      //   res: response.data.patients,\n      // });\n\n      let Details = response.data.patients;\n      console.log(\"details \", Details);\n      let d = [];\n\n      for (let j = 0; j < Object.keys(Details).length; j++) d[j] = this.create_object();\n\n      for (var key in Details) {\n        d[key - 1].name = Details[key].name;\n        d[key - 1].patientId = Details[key].patientId;\n        d[key - 1].address = Details[key].address;\n        d[key - 1].password = Details[key].password;\n        d[key - 1].email = Details[key].email;\n        d[key - 1].phone = Details[key].phone;\n        d[key - 1].guardianName = Details[key].guardianName;\n        d[key - 1].doctorId = Details[key].doctorId;\n        d[key - 1].sex = Details[key].sex;\n        d[key - 1].weight = Details[key].weight;\n        d[key - 1].height = Details[key].height;\n        d[key - 1].age = Details[key].age;\n        console.log(\"d =\", d);\n        this.setState({\n          table_data: d\n        });\n      }\n    }).catch(err => console.log(\"error \", err));\n  } //   formatApiData() {\n  //     let Details = this.state.res;\n  //     console.log(\"details \", Details);\n  //     let d = [];\n  //     for (let j = 0; j < Object.keys(Details).length; j++)\n  //       d[j] = this.create_object();\n  //     //console.log(\"table data: \", d);\n  //     // console.log(\"d name \", d[0].name);\n  //     for (var key in Details) {\n  //       d[key - 1].name = Details[key].name;\n  //       d[key - 1].patientId = Details[key].patientId;\n  //       d[key - 1].address = Details[key].address;\n  //       d[key - 1].password = Details[key].password;\n  //       d[key - 1].email = Details[key].email;\n  //       d[key - 1].phone = Details[key].phone;\n  //       d[key - 1].guardianName = Details[key].guardianName;\n  //       d[key - 1].doctorId = Details[key].doctorId;\n  //       d[key - 1].sex = Details[key].sex;\n  //       d[key - 1].weight = Details[key].weight;\n  //       d[key - 1].height = Details[key].height;\n  //       d[key - 1].age = Details[key].age;\n  //     }\n  //     // console.log(\"formatted \", d);\n  //   }\n\n\n  async componentDidMount() {\n    this.getApiData(); // window.location.reload();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.x && /*#__PURE__*/React.createElement(MaterialTable, {\n      title: \"Editable Preview\",\n      columns: this.state.columns,\n      data: this.state.table_data,\n      editable: {\n        onRowAdd: newData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            this.add_data(this.state.table_data, newData); //setData([...data, newData]);\n\n            resolve();\n          }, 1000);\n        }),\n        onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataUpdate = [...this.state.table_data];\n            const index = oldData.tableData.id;\n            dataUpdate[index] = newData; //setData([...dataUpdate]);\n\n            this.setState({ ...this.state,\n              table_data: [...dataUpdate]\n            });\n            resolve();\n          }, 1000);\n        }) // onRowDelete: (oldData) =>\n        //   new Promise((resolve, reject) => {\n        //     setTimeout(() => {\n        //       const dataDelete = [...data];\n        //       const index = oldData.tableData.id;\n        //       dataDelete.splice(index, 1);\n        //       setData([...dataDelete]);\n        //       resolve();\n        //     }, 1000);\n        //   }),\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Sumanth/OneDrive/Documents/react/patient_monitor/src/components/pattabletemp.js"],"names":["axios","React","Component","useState","MaterialTable","Editable","PatTableTemp","constructor","props","create_object","name","patientId","email","password","address","phone","sex","guardianName","age","height","weight","doctorId","add_data","data","newData","console","log","state","setState","x","arr","push","table_data","columns","title","field","bind","getApiData","get","url","params","a_id","then","response","patients","Details","d","j","Object","keys","length","key","catch","err","componentDidMount","render","onRowAdd","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","id"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { Component, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Editable } from \"./tablefunction\";\r\nexport class PatTableTemp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      x: true,\r\n      table_data: [],\r\n      columns: [\r\n        { title: \"Name\", field: \"name\" },\r\n        { title: \"Patient ID\", field: \"patientId\" },\r\n        { title: \"Email\", field: \"email\" },\r\n        { title: \"Address\", field: \"address\" },\r\n        { title: \"Phone Number\", field: \"phone\" },\r\n        { title: \"Gender\", field: \"sex\" },\r\n        { title: \"Name of Guardian\", field: \"guardianName\" },\r\n        { title: \"Age\", field: \"age\" },\r\n        { title: \"Height\", field: \"height\" },\r\n        { title: \"Weight\", field: \"weight\" },\r\n        { title: \"Doctor ID\", field: \"doctorId\" },\r\n      ],\r\n      data: this.table_data,\r\n      // {\r\n      //   name: \"sumo\",\r\n      //   patientId: \"12\",\r\n      //   email: \"@.com\",\r\n      //   address: \"teynampet\",\r\n      //   phone: \"12\",\r\n      //   sex: \"male\",\r\n      //   guardianName: \"cba\",\r\n      //   age: \"18\",\r\n      //   height: \"12\",\r\n      //   weight: \"45\",\r\n      //   doctorId: \"619\",\r\n      // },\r\n    };\r\n    this.add_data = this.add_data.bind(this);\r\n    // this.formatApiData = this.formatApiData.bind(this);\r\n  }\r\n\r\n  create_object = () => {\r\n    return {\r\n      name: 0,\r\n      patientId: 0,\r\n      email: 0,\r\n      password: 0,\r\n      address: 0,\r\n      phone: 0,\r\n      sex: 0,\r\n      guardianName: 0,\r\n      age: 0,\r\n      height: 0,\r\n      weight: 0,\r\n      doctorId: 0,\r\n    };\r\n  };\r\n  getApiData() {\r\n    axios\r\n      .get(this.props.url + \"covid19_patient_monitor/get_info\", {\r\n        params: {\r\n          a_id: \"ADMIN123\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"api response \", response.data.patients);\r\n        // this.setState({\r\n        //   res: response.data.patients,\r\n        // });\r\n        let Details = response.data.patients;\r\n        console.log(\"details \", Details);\r\n        let d = [];\r\n        for (let j = 0; j < Object.keys(Details).length; j++)\r\n          d[j] = this.create_object();\r\n        for (var key in Details) {\r\n          d[key - 1].name = Details[key].name;\r\n          d[key - 1].patientId = Details[key].patientId;\r\n          d[key - 1].address = Details[key].address;\r\n          d[key - 1].password = Details[key].password;\r\n          d[key - 1].email = Details[key].email;\r\n          d[key - 1].phone = Details[key].phone;\r\n          d[key - 1].guardianName = Details[key].guardianName;\r\n          d[key - 1].doctorId = Details[key].doctorId;\r\n          d[key - 1].sex = Details[key].sex;\r\n          d[key - 1].weight = Details[key].weight;\r\n          d[key - 1].height = Details[key].height;\r\n          d[key - 1].age = Details[key].age;\r\n          console.log(\"d =\", d);\r\n          this.setState({\r\n            table_data: d,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => console.log(\"error \", err));\r\n  }\r\n\r\n  //   formatApiData() {\r\n  //     let Details = this.state.res;\r\n  //     console.log(\"details \", Details);\r\n  //     let d = [];\r\n  //     for (let j = 0; j < Object.keys(Details).length; j++)\r\n  //       d[j] = this.create_object();\r\n  //     //console.log(\"table data: \", d);\r\n  //     // console.log(\"d name \", d[0].name);\r\n  //     for (var key in Details) {\r\n  //       d[key - 1].name = Details[key].name;\r\n  //       d[key - 1].patientId = Details[key].patientId;\r\n  //       d[key - 1].address = Details[key].address;\r\n  //       d[key - 1].password = Details[key].password;\r\n  //       d[key - 1].email = Details[key].email;\r\n  //       d[key - 1].phone = Details[key].phone;\r\n  //       d[key - 1].guardianName = Details[key].guardianName;\r\n  //       d[key - 1].doctorId = Details[key].doctorId;\r\n  //       d[key - 1].sex = Details[key].sex;\r\n  //       d[key - 1].weight = Details[key].weight;\r\n  //       d[key - 1].height = Details[key].height;\r\n  //       d[key - 1].age = Details[key].age;\r\n  //     }\r\n  //     // console.log(\"formatted \", d);\r\n  //   }\r\n  async componentDidMount() {\r\n    this.getApiData();\r\n    // window.location.reload();\r\n  }\r\n\r\n  add_data = (data, newData) => {\r\n    console.log(\"state in add data\", this.state);\r\n    this.setState({\r\n      ...this.state,\r\n      x: false,\r\n    });\r\n    let arr = data;\r\n    arr.push(newData);\r\n    this.setState({\r\n      ...this.state,\r\n      table_data: arr,\r\n    });\r\n    console.log(\"state in add data\", this.state);\r\n    this.setState({\r\n      ...this.state,\r\n      x: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.x && (\r\n          <MaterialTable\r\n            title=\"Editable Preview\"\r\n            columns={this.state.columns}\r\n            data={this.state.table_data}\r\n            editable={{\r\n              onRowAdd: (newData) =>\r\n                new Promise((resolve, reject) => {\r\n                  setTimeout(() => {\r\n                    this.add_data(this.state.table_data, newData);\r\n                    //setData([...data, newData]);\r\n                    resolve();\r\n                  }, 1000);\r\n                }),\r\n              onRowUpdate: (newData, oldData) =>\r\n                new Promise((resolve, reject) => {\r\n                  setTimeout(() => {\r\n                    const dataUpdate = [...this.state.table_data];\r\n                    const index = oldData.tableData.id;\r\n                    dataUpdate[index] = newData;\r\n                    //setData([...dataUpdate]);\r\n                    this.setState({\r\n                      ...this.state,\r\n                      table_data: [...dataUpdate],\r\n                    });\r\n                    resolve();\r\n                  }, 1000);\r\n                }),\r\n              // onRowDelete: (oldData) =>\r\n              //   new Promise((resolve, reject) => {\r\n              //     setTimeout(() => {\r\n              //       const dataDelete = [...data];\r\n              //       const index = oldData.tableData.id;\r\n              //       dataDelete.splice(index, 1);\r\n              //       setData([...dataDelete]);\r\n\r\n              //       resolve();\r\n              //     }, 1000);\r\n              //   }),\r\n            }}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}