{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sumanth\\\\OneDrive\\\\Documents\\\\react\\\\patient_monitor\\\\src\\\\components\\\\pattabletemp.js\";\nimport axios from \"axios\";\nimport React, { Component, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nexport class PatTableTemp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      res: null,\n      columns: [{\n        title: \"Name\",\n        field: \"name\"\n      }, {\n        title: \"Patient ID\",\n        field: \"patientId\"\n      }, {\n        title: \"Email\",\n        field: \"email\"\n      }, {\n        title: \"Address\",\n        field: \"address\"\n      }, {\n        title: \"Phone Number\",\n        field: \"phone\"\n      }, {\n        title: \"Gender\",\n        field: \"sex\"\n      }, {\n        title: \"Name of Guardian\",\n        field: \"guardianName\"\n      }, {\n        title: \"Age\",\n        field: \"age\"\n      }, {\n        title: \"Height\",\n        field: \"height\"\n      }, {\n        title: \"Weight\",\n        field: \"weight\"\n      }, {\n        title: \"Doctor ID\",\n        field: \"doctorId\"\n      }],\n      data: [{\n        name: \"sumo\",\n        patientId: \"12\",\n        email: \"@.com\",\n        address: \"teynampet\",\n        phone: \"12\",\n        sex: \"male\",\n        guardianName: \"cba\",\n        age: \"18\",\n        height: \"12\",\n        weight: \"45\",\n        doctorId: \"619\"\n      }]\n    };\n  }\n\n  getApiData() {\n    let create_object = () => {\n      return {\n        name: 0,\n        patientId: 0,\n        email: 0,\n        password: 0,\n        address: 0,\n        phone: 0,\n        sex: 0,\n        guardianName: 0,\n        age: 0,\n        height: 0,\n        weight: 0,\n        doctorId: 0\n      };\n    };\n\n    axios.get(this.props.url + \"covid19_patient_monitor/get_info\", {\n      params: {\n        a_id: \"ADMIN123\"\n      }\n    }).then(response => {\n      console.log(\"api response \", response.data.patients);\n      this.setState({\n        res: response.data.patients\n      }); // response = res.data.patients;\n      //setRes(res.data.patients);\n    }).catch(err => console.log(\"error \", err));\n  }\n\n  formatApiData() {// let Details = response.data.patients;\n    // let d = [];\n    // for (let j = 0; j < Object.keys(Details).length; j++)\n    //   d[j] = create_object();\n    // //console.log(\"table data: \", d);\n    // // console.log(\"d name \", d[0].name);\n    // for (var key in Details) {\n    //   d[key - 1].name = Details[key].name;\n    //   d[key - 1].patientId = Details[key].patientId;\n    //   d[key - 1].address = Details[key].address;\n    //   d[key - 1].password = Details[key].password;\n    //   d[key - 1].email = Details[key].email;\n    //   d[key - 1].phone = Details[key].phone;\n    //   d[key - 1].guardianName = Details[key].guardianName;\n    //   d[key - 1].doctorId = Details[key].doctorId;\n    //   d[key - 1].sex = Details[key].sex;\n    //   d[key - 1].weight = Details[key].weight;\n    //   d[key - 1].height = Details[key].height;\n    //   d[key - 1].age = Details[key].age;\n    // }\n    // setRes(d);\n    //console.log(\"response \", response);\n    // console.log(\"state= \", apiData);\n  }\n\n  async componentDidMount() {\n    this.getApiData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MaterialTable, {\n      title: \"Registered Patients\",\n      columns: this.state.columns,\n      data: this.state.data,\n      options: {\n        paging: false\n      },\n      editable: {\n        onRowAdd: newData => new Promise(resolve => {\n          setTimeout(() => {\n            resolve(); //   setState((prevState) => {\n            //     const data = [...prevState.data];\n            //     data.push(newData);\n            //     // state.push = data;\n            //     // let s = get_data(state.push); //object to be pushed with api\n            //     // console.log(JSON.stringify(s));\n            //     // do api request to send state.push below\n            //     // axios.post('',JSON.stringify(s))\n            //     // .then((response)=> console.log(response))\n            //     // .catch((err)=>console.log(err))\n            //     return { ...prevState, data };\n            //   });\n          }, 600);\n        }),\n        onRowUpdate: (newData, oldData) => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n\n            if (oldData) {\n              console.log(\"oldData: \", oldData); // setState((prevState) => {\n              //   const data = [...prevState.data];\n              //   //   state.push = state.data;\n              //   // console.log(state.push)\n              //   // console.log(\"new data: \",newData)\n              //   //   state.push[data.length - 1] = newData;\n              //   //   let s = get_data2(state.push); //object to be pushed\n              //   //do api request to send state.push below\n              //   data[data.indexOf(oldData)] = newData;\n              //   return { ...prevState, data };\n              // });\n            }\n          }, 600);\n        }),\n        onRowDelete: oldData => new Promise(resolve => {\n          setTimeout(() => {\n            resolve(); //   setState((prevState) => {\n            //     const data = [...prevState.data];\n            //     data.splice(data.indexOf(oldData), 1);\n            //     console.log(\"data \", data);\n            //     // state.push = data;\n            //     // let s = get_data3(state.push); //object to pushed\n            //     //do api request\n            //     // console.log(\"s= \",s)\n            //     return { ...prevState, data };\n            //   });\n          }, 600);\n        })\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Sumanth/OneDrive/Documents/react/patient_monitor/src/components/pattabletemp.js"],"names":["axios","React","Component","useState","MaterialTable","PatTableTemp","constructor","props","state","res","columns","title","field","data","name","patientId","email","address","phone","sex","guardianName","age","height","weight","doctorId","getApiData","create_object","password","get","url","params","a_id","then","response","console","log","patients","setState","catch","err","formatApiData","componentDidMount","render","paging","onRowAdd","newData","Promise","resolve","setTimeout","onRowUpdate","oldData","onRowDelete"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAO,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAC1CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,IADM;AAEXC,MAAAA,OAAO,EAAE,CACP;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OADO,EAEP;AAAED,QAAAA,KAAK,EAAE,YAAT;AAAuBC,QAAAA,KAAK,EAAE;AAA9B,OAFO,EAGP;AAAED,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAHO,EAIP;AAAED,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OAJO,EAKP;AAAED,QAAAA,KAAK,EAAE,cAAT;AAAyBC,QAAAA,KAAK,EAAE;AAAhC,OALO,EAMP;AAAED,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OANO,EAOP;AAAED,QAAAA,KAAK,EAAE,kBAAT;AAA6BC,QAAAA,KAAK,EAAE;AAApC,OAPO,EAQP;AAAED,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OARO,EASP;AAAED,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OATO,EAUP;AAAED,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAVO,EAWP;AAAED,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAXO,CAFE;AAeXC,MAAAA,IAAI,EAAE,CACJ;AACEC,QAAAA,IAAI,EAAE,MADR;AAEEC,QAAAA,SAAS,EAAE,IAFb;AAGEC,QAAAA,KAAK,EAAE,OAHT;AAIEC,QAAAA,OAAO,EAAE,WAJX;AAKEC,QAAAA,KAAK,EAAE,IALT;AAMEC,QAAAA,GAAG,EAAE,MANP;AAOEC,QAAAA,YAAY,EAAE,KAPhB;AAQEC,QAAAA,GAAG,EAAE,IARP;AASEC,QAAAA,MAAM,EAAE,IATV;AAUEC,QAAAA,MAAM,EAAE,IAVV;AAWEC,QAAAA,QAAQ,EAAE;AAXZ,OADI;AAfK,KAAb;AA+BD;;AAEDC,EAAAA,UAAU,GAAG;AACX,QAAIC,aAAa,GAAG,MAAM;AACxB,aAAO;AACLZ,QAAAA,IAAI,EAAE,CADD;AAELC,QAAAA,SAAS,EAAE,CAFN;AAGLC,QAAAA,KAAK,EAAE,CAHF;AAILW,QAAAA,QAAQ,EAAE,CAJL;AAKLV,QAAAA,OAAO,EAAE,CALJ;AAMLC,QAAAA,KAAK,EAAE,CANF;AAOLC,QAAAA,GAAG,EAAE,CAPA;AAQLC,QAAAA,YAAY,EAAE,CART;AASLC,QAAAA,GAAG,EAAE,CATA;AAULC,QAAAA,MAAM,EAAE,CAVH;AAWLC,QAAAA,MAAM,EAAE,CAXH;AAYLC,QAAAA,QAAQ,EAAE;AAZL,OAAP;AAcD,KAfD;;AAgBAxB,IAAAA,KAAK,CACF4B,GADH,CACO,KAAKrB,KAAL,CAAWsB,GAAX,GAAiB,kCADxB,EAC4D;AACxDC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE;AADA;AADgD,KAD5D,EAMGC,IANH,CAMSC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,QAAQ,CAACpB,IAAT,CAAcuB,QAA3C;AACA,WAAKC,QAAL,CAAc;AACZ5B,QAAAA,GAAG,EAAEwB,QAAQ,CAACpB,IAAT,CAAcuB;AADP,OAAd,EAFkB,CAKlB;AACA;AACD,KAbH,EAcGE,KAdH,CAcUC,GAAD,IAASL,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBI,GAAtB,CAdlB;AAeD;;AACDC,EAAAA,aAAa,GAAG,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AACD,QAAMC,iBAAN,GAA0B;AACxB,SAAKhB,UAAL;AACD;;AACDiB,EAAAA,MAAM,GAAG;AACP,wBACE,uDACE,oBAAC,aAAD;AACE,MAAA,KAAK,EAAC,qBADR;AAEE,MAAA,OAAO,EAAE,KAAKlC,KAAL,CAAWE,OAFtB;AAGE,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWK,IAHnB;AAIE,MAAA,OAAO,EAAE;AACP8B,QAAAA,MAAM,EAAE;AADD,OAJX;AAOE,MAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAGC,OAAD,IACR,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACvBC,UAAAA,UAAU,CAAC,MAAM;AACfD,YAAAA,OAAO,GADQ,CAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,WAdS,EAcP,GAdO,CAAV;AAeD,SAhBD,CAFM;AAmBRE,QAAAA,WAAW,EAAE,CAACJ,OAAD,EAAUK,OAAV,KACX,IAAIJ,OAAJ,CAAaC,OAAD,IAAa;AACvBC,UAAAA,UAAU,CAAC,MAAM;AACfD,YAAAA,OAAO;;AACP,gBAAIG,OAAJ,EAAa;AACXhB,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBe,OAAzB,EADW,CAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF,WAhBS,EAgBP,GAhBO,CAAV;AAiBD,SAlBD,CApBM;AAuCRC,QAAAA,WAAW,EAAGD,OAAD,IACX,IAAIJ,OAAJ,CAAaC,OAAD,IAAa;AACvBC,UAAAA,UAAU,CAAC,MAAM;AACfD,YAAAA,OAAO,GADQ,CAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,WAZS,EAYP,GAZO,CAAV;AAaD,SAdD;AAxCM,OAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAoED;;AAtKyC","sourcesContent":["import axios from \"axios\";\r\nimport React, { Component, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nexport class PatTableTemp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      res: null,\r\n      columns: [\r\n        { title: \"Name\", field: \"name\" },\r\n        { title: \"Patient ID\", field: \"patientId\" },\r\n        { title: \"Email\", field: \"email\" },\r\n        { title: \"Address\", field: \"address\" },\r\n        { title: \"Phone Number\", field: \"phone\" },\r\n        { title: \"Gender\", field: \"sex\" },\r\n        { title: \"Name of Guardian\", field: \"guardianName\" },\r\n        { title: \"Age\", field: \"age\" },\r\n        { title: \"Height\", field: \"height\" },\r\n        { title: \"Weight\", field: \"weight\" },\r\n        { title: \"Doctor ID\", field: \"doctorId\" },\r\n      ],\r\n      data: [\r\n        {\r\n          name: \"sumo\",\r\n          patientId: \"12\",\r\n          email: \"@.com\",\r\n          address: \"teynampet\",\r\n          phone: \"12\",\r\n          sex: \"male\",\r\n          guardianName: \"cba\",\r\n          age: \"18\",\r\n          height: \"12\",\r\n          weight: \"45\",\r\n          doctorId: \"619\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  getApiData() {\r\n    let create_object = () => {\r\n      return {\r\n        name: 0,\r\n        patientId: 0,\r\n        email: 0,\r\n        password: 0,\r\n        address: 0,\r\n        phone: 0,\r\n        sex: 0,\r\n        guardianName: 0,\r\n        age: 0,\r\n        height: 0,\r\n        weight: 0,\r\n        doctorId: 0,\r\n      };\r\n    };\r\n    axios\r\n      .get(this.props.url + \"covid19_patient_monitor/get_info\", {\r\n        params: {\r\n          a_id: \"ADMIN123\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"api response \", response.data.patients);\r\n        this.setState({\r\n          res: response.data.patients,\r\n        });\r\n        // response = res.data.patients;\r\n        //setRes(res.data.patients);\r\n      })\r\n      .catch((err) => console.log(\"error \", err));\r\n  }\r\n  formatApiData() {\r\n    // let Details = response.data.patients;\r\n    // let d = [];\r\n    // for (let j = 0; j < Object.keys(Details).length; j++)\r\n    //   d[j] = create_object();\r\n    // //console.log(\"table data: \", d);\r\n    // // console.log(\"d name \", d[0].name);\r\n    // for (var key in Details) {\r\n    //   d[key - 1].name = Details[key].name;\r\n    //   d[key - 1].patientId = Details[key].patientId;\r\n    //   d[key - 1].address = Details[key].address;\r\n    //   d[key - 1].password = Details[key].password;\r\n    //   d[key - 1].email = Details[key].email;\r\n    //   d[key - 1].phone = Details[key].phone;\r\n    //   d[key - 1].guardianName = Details[key].guardianName;\r\n    //   d[key - 1].doctorId = Details[key].doctorId;\r\n    //   d[key - 1].sex = Details[key].sex;\r\n    //   d[key - 1].weight = Details[key].weight;\r\n    //   d[key - 1].height = Details[key].height;\r\n    //   d[key - 1].age = Details[key].age;\r\n    // }\r\n    // setRes(d);\r\n    //console.log(\"response \", response);\r\n    // console.log(\"state= \", apiData);\r\n  }\r\n  async componentDidMount() {\r\n    this.getApiData();\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <MaterialTable\r\n          title=\"Registered Patients\"\r\n          columns={this.state.columns}\r\n          data={this.state.data}\r\n          options={{\r\n            paging: false,\r\n          }}\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n                  //   setState((prevState) => {\r\n                  //     const data = [...prevState.data];\r\n                  //     data.push(newData);\r\n                  //     // state.push = data;\r\n                  //     // let s = get_data(state.push); //object to be pushed with api\r\n                  //     // console.log(JSON.stringify(s));\r\n                  //     // do api request to send state.push below\r\n                  //     // axios.post('',JSON.stringify(s))\r\n                  //     // .then((response)=> console.log(response))\r\n                  //     // .catch((err)=>console.log(err))\r\n                  //     return { ...prevState, data };\r\n                  //   });\r\n                }, 600);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n                  if (oldData) {\r\n                    console.log(\"oldData: \", oldData);\r\n                    // setState((prevState) => {\r\n                    //   const data = [...prevState.data];\r\n                    //   //   state.push = state.data;\r\n                    //   // console.log(state.push)\r\n                    //   // console.log(\"new data: \",newData)\r\n                    //   //   state.push[data.length - 1] = newData;\r\n                    //   //   let s = get_data2(state.push); //object to be pushed\r\n                    //   //do api request to send state.push below\r\n                    //   data[data.indexOf(oldData)] = newData;\r\n                    //   return { ...prevState, data };\r\n                    // });\r\n                  }\r\n                }, 600);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n                  //   setState((prevState) => {\r\n                  //     const data = [...prevState.data];\r\n                  //     data.splice(data.indexOf(oldData), 1);\r\n                  //     console.log(\"data \", data);\r\n                  //     // state.push = data;\r\n                  //     // let s = get_data3(state.push); //object to pushed\r\n                  //     //do api request\r\n                  //     // console.log(\"s= \",s)\r\n                  //     return { ...prevState, data };\r\n                  //   });\r\n                }, 600);\r\n              }),\r\n          }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}