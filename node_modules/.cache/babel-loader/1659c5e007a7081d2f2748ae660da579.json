{"ast":null,"code":"import List from '../docpat.json';\nexport function Extract(name) {\n  console.log(\"inisde list ectractor method\");\n  let name_list = [],\n      id_list = [],\n      i = 0;\n  List.forEach(p => {\n    if (p.name === name) {\n      name_list = p.patients.map(e => e[0]);\n      id_list = p.patients.map(e => e[1]);\n    }\n  });\n  console.log(name_list, id_list);\n  return [name_list, id_list];\n}\nexport function PatTableExtract() {\n  let name_list = [],\n      id_list = [],\n      i = 0;\n  List.forEach(p => {\n    name_list = p.patients.map(e => e[0]);\n    id_list = p.patients.map(e => e[1]);\n  });\n  console.log(name_list);\n  return [name_list, id_list];\n}\nexport function doctableExtract() {\n  let name_list = [],\n      id_list = [],\n      i = 0;\n  List.forEach(p => {\n    name_list.push(p.name);\n    console.log(\"added \", name_list);\n    id_list.push(p.d_id);\n  }); //console.log(name_list)\n\n  return [name_list, id_list];\n}","map":{"version":3,"sources":["C:/Users/Sumanth/OneDrive/Documents/react/patient_monitor/src/components/listextractor.js"],"names":["List","Extract","name","console","log","name_list","id_list","i","forEach","p","patients","map","e","PatTableExtract","doctableExtract","push","d_id"],"mappings":"AACA,OAAOA,IAAP,MAAiB,gBAAjB;AAEA,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAsB;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,MAAIC,SAAS,GAAC,EAAd;AAAA,MAAiBC,OAAO,GAAC,EAAzB;AAAA,MAA4BC,CAAC,GAAC,CAA9B;AACAP,EAAAA,IAAI,CAACQ,OAAL,CAAcC,CAAD,IAAK;AACd,QAAGA,CAAC,CAACP,IAAF,KAASA,IAAZ,EAAiB;AACbG,MAAAA,SAAS,GAACI,CAAC,CAACC,QAAF,CAAWC,GAAX,CAAgBC,CAAD,IAAKA,CAAC,CAAC,CAAD,CAArB,CAAV;AACAN,MAAAA,OAAO,GAACG,CAAC,CAACC,QAAF,CAAWC,GAAX,CAAgBC,CAAD,IAAKA,CAAC,CAAC,CAAD,CAArB,CAAR;AACH;AACJ,GALD;AAMAT,EAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ,EAAsBC,OAAtB;AACA,SAAO,CAACD,SAAD,EAAWC,OAAX,CAAP;AACH;AAED,OAAO,SAASO,eAAT,GAA0B;AAC7B,MAAIR,SAAS,GAAC,EAAd;AAAA,MAAiBC,OAAO,GAAC,EAAzB;AAAA,MAA4BC,CAAC,GAAC,CAA9B;AACAP,EAAAA,IAAI,CAACQ,OAAL,CAAcC,CAAD,IAAK;AACdJ,IAAAA,SAAS,GAACI,CAAC,CAACC,QAAF,CAAWC,GAAX,CAAgBC,CAAD,IAAKA,CAAC,CAAC,CAAD,CAArB,CAAV;AACAN,IAAAA,OAAO,GAACG,CAAC,CAACC,QAAF,CAAWC,GAAX,CAAgBC,CAAD,IAAKA,CAAC,CAAC,CAAD,CAArB,CAAR;AACH,GAHD;AAIAT,EAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACA,SAAO,CAACA,SAAD,EAAWC,OAAX,CAAP;AACH;AAED,OAAO,SAASQ,eAAT,GAA0B;AAC7B,MAAIT,SAAS,GAAC,EAAd;AAAA,MAAiBC,OAAO,GAAC,EAAzB;AAAA,MAA4BC,CAAC,GAAC,CAA9B;AACAP,EAAAA,IAAI,CAACQ,OAAL,CAAcC,CAAD,IAAK;AACdJ,IAAAA,SAAS,CAACU,IAAV,CAAeN,CAAC,CAACP,IAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBC,SAArB;AACAC,IAAAA,OAAO,CAACS,IAAR,CAAaN,CAAC,CAACO,IAAf;AACH,GAJD,EAF6B,CAO7B;;AACA,SAAO,CAACX,SAAD,EAAWC,OAAX,CAAP;AACH","sourcesContent":["\r\nimport List from '../docpat.json'\r\n\r\nexport function Extract(name){\r\n    console.log(\"inisde list ectractor method\")\r\n    let name_list=[],id_list=[],i=0\r\n    List.forEach((p)=>{\r\n        if(p.name===name){\r\n            name_list=p.patients.map((e)=>e[0])\r\n            id_list=p.patients.map((e)=>e[1])\r\n        }\r\n    })\r\n    console.log(name_list,id_list)\r\n    return [name_list,id_list]\r\n}\r\n\r\nexport function PatTableExtract(){\r\n    let name_list=[],id_list=[],i=0\r\n    List.forEach((p)=>{\r\n        name_list=p.patients.map((e)=>e[0])\r\n        id_list=p.patients.map((e)=>e[1])\r\n    })\r\n    console.log(name_list)\r\n    return [name_list,id_list]\r\n}\r\n\r\nexport function doctableExtract(){\r\n    let name_list=[],id_list=[],i=0\r\n    List.forEach((p)=>{\r\n        name_list.push(p.name)\r\n        console.log(\"added \",name_list)\r\n        id_list.push(p.d_id)\r\n    })\r\n    //console.log(name_list)\r\n    return [name_list,id_list]\r\n}\r\n \r\n"]},"metadata":{},"sourceType":"module"}