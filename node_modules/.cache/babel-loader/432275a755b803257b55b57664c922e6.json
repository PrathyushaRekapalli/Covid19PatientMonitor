{"ast":null,"code":"import axios from \"axios\";\nimport { useState } from \"react\";\nexport function Extract() {\n  const [res, setRes] = useState(null);\n  axios.get(\"http://7f528d0c0908.ngrok.io/covid19_patient_monitor/get_info\", {\n    params: {\n      a_id: \"ADMIN123\"\n    }\n  }).then(res => {\n    //console.log(\"api response \", res.data.patients);\n    // response = res.data.patients;\n    //setRes(res.data.patients);\n    let Details = res.data.patients;\n    let d = [];\n\n    for (let j = 0; j < Object.keys(Details).length; j++) d[j] = create_object(); //console.log(\"table data: \", d);\n    // console.log(\"d name \", d[0].name);\n\n\n    for (var key in Details) {\n      d[key - 1].name = Details[key].name;\n      d[key - 1].patientId = Details[key].patientId;\n      d[key - 1].address = Details[key].address;\n      d[key - 1].password = Details[key].password;\n      d[key - 1].email = Details[key].email;\n      d[key - 1].phone = Details[key].phone;\n      d[key - 1].guardianName = Details[key].guardianName;\n      d[key - 1].doctorId = Details[key].doctorId;\n      d[key - 1].sex = Details[key].sex;\n      d[key - 1].weight = Details[key].weight;\n      d[key - 1].height = Details[key].height;\n      d[key - 1].age = Details[key].age;\n    }\n\n    setRes(d); //console.log(\"response \", response);\n    // console.log(\"state= \", apiData);\n  }).catch(err => console.log(\"error \", err));\n  return res;\n}","map":{"version":3,"sources":["C:/Users/Sumanth/OneDrive/Documents/react/patient_monitor/src/components/extract.js"],"names":["axios","useState","Extract","res","setRes","get","params","a_id","then","Details","data","patients","d","j","Object","keys","length","create_object","key","name","patientId","address","password","email","phone","guardianName","doctorId","sex","weight","height","age","catch","err","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAO,SAASC,OAAT,GAAmB;AACxB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBH,QAAQ,CAAC,IAAD,CAA9B;AAEAD,EAAAA,KAAK,CACFK,GADH,CACO,+DADP,EACwE;AACpEC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAE;AADA;AAD4D,GADxE,EAMGC,IANH,CAMSL,GAAD,IAAS;AACb;AACA;AACA;AACA,QAAIM,OAAO,GAAGN,GAAG,CAACO,IAAJ,CAASC,QAAvB;AACA,QAAIC,CAAC,GAAG,EAAR;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYN,OAAZ,EAAqBO,MAAzC,EAAiDH,CAAC,EAAlD,EACED,CAAC,CAACC,CAAD,CAAD,GAAOI,aAAa,EAApB,CAPW,CAQb;AACA;;;AACA,SAAK,IAAIC,GAAT,IAAgBT,OAAhB,EAAyB;AACvBG,MAAAA,CAAC,CAACM,GAAG,GAAG,CAAP,CAAD,CAAWC,IAAX,GAAkBV,OAAO,CAACS,GAAD,CAAP,CAAaC,IAA/B;AACAP,MAAAA,CAAC,CAACM,GAAG,GAAG,CAAP,CAAD,CAAWE,SAAX,GAAuBX,OAAO,CAACS,GAAD,CAAP,CAAaE,SAApC;AACAR,MAAAA,CAAC,CAACM,GAAG,GAAG,CAAP,CAAD,CAAWG,OAAX,GAAqBZ,OAAO,CAACS,GAAD,CAAP,CAAaG,OAAlC;AACAT,MAAAA,CAAC,CAACM,GAAG,GAAG,CAAP,CAAD,CAAWI,QAAX,GAAsBb,OAAO,CAACS,GAAD,CAAP,CAAaI,QAAnC;AACAV,MAAAA,CAAC,CAACM,GAAG,GAAG,CAAP,CAAD,CAAWK,KAAX,GAAmBd,OAAO,CAACS,GAAD,CAAP,CAAaK,KAAhC;AACAX,MAAAA,CAAC,CAACM,GAAG,GAAG,CAAP,CAAD,CAAWM,KAAX,GAAmBf,OAAO,CAACS,GAAD,CAAP,CAAaM,KAAhC;AACAZ,MAAAA,CAAC,CAACM,GAAG,GAAG,CAAP,CAAD,CAAWO,YAAX,GAA0BhB,OAAO,CAACS,GAAD,CAAP,CAAaO,YAAvC;AACAb,MAAAA,CAAC,CAACM,GAAG,GAAG,CAAP,CAAD,CAAWQ,QAAX,GAAsBjB,OAAO,CAACS,GAAD,CAAP,CAAaQ,QAAnC;AACAd,MAAAA,CAAC,CAACM,GAAG,GAAG,CAAP,CAAD,CAAWS,GAAX,GAAiBlB,OAAO,CAACS,GAAD,CAAP,CAAaS,GAA9B;AACAf,MAAAA,CAAC,CAACM,GAAG,GAAG,CAAP,CAAD,CAAWU,MAAX,GAAoBnB,OAAO,CAACS,GAAD,CAAP,CAAaU,MAAjC;AACAhB,MAAAA,CAAC,CAACM,GAAG,GAAG,CAAP,CAAD,CAAWW,MAAX,GAAoBpB,OAAO,CAACS,GAAD,CAAP,CAAaW,MAAjC;AACAjB,MAAAA,CAAC,CAACM,GAAG,GAAG,CAAP,CAAD,CAAWY,GAAX,GAAiBrB,OAAO,CAACS,GAAD,CAAP,CAAaY,GAA9B;AACD;;AACD1B,IAAAA,MAAM,CAACQ,CAAD,CAAN,CAxBa,CAyBb;AACA;AACD,GAjCH,EAkCGmB,KAlCH,CAkCUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,GAAtB,CAlClB;AAmCA,SAAO7B,GAAP;AACD","sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nexport function Extract() {\r\n  const [res, setRes] = useState(null);\r\n\r\n  axios\r\n    .get(\"http://7f528d0c0908.ngrok.io/covid19_patient_monitor/get_info\", {\r\n      params: {\r\n        a_id: \"ADMIN123\",\r\n      },\r\n    })\r\n    .then((res) => {\r\n      //console.log(\"api response \", res.data.patients);\r\n      // response = res.data.patients;\r\n      //setRes(res.data.patients);\r\n      let Details = res.data.patients;\r\n      let d = [];\r\n      for (let j = 0; j < Object.keys(Details).length; j++)\r\n        d[j] = create_object();\r\n      //console.log(\"table data: \", d);\r\n      // console.log(\"d name \", d[0].name);\r\n      for (var key in Details) {\r\n        d[key - 1].name = Details[key].name;\r\n        d[key - 1].patientId = Details[key].patientId;\r\n        d[key - 1].address = Details[key].address;\r\n        d[key - 1].password = Details[key].password;\r\n        d[key - 1].email = Details[key].email;\r\n        d[key - 1].phone = Details[key].phone;\r\n        d[key - 1].guardianName = Details[key].guardianName;\r\n        d[key - 1].doctorId = Details[key].doctorId;\r\n        d[key - 1].sex = Details[key].sex;\r\n        d[key - 1].weight = Details[key].weight;\r\n        d[key - 1].height = Details[key].height;\r\n        d[key - 1].age = Details[key].age;\r\n      }\r\n      setRes(d);\r\n      //console.log(\"response \", response);\r\n      // console.log(\"state= \", apiData);\r\n    })\r\n    .catch((err) => console.log(\"error \", err));\r\n  return res;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}