{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Sumanth\\\\OneDrive\\\\Documents\\\\react\\\\patient_monitor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:\\\\Users\\\\Sumanth\\\\OneDrive\\\\Documents\\\\react\\\\patient_monitor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\Sumanth\\\\OneDrive\\\\Documents\\\\react\\\\patient_monitor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import MaterialTable from'material-table';import{PatTableExtract}from'./listextractor';export function PatTable(){var _PatTableExtract=PatTableExtract(),_PatTableExtract2=_slicedToArray(_PatTableExtract,2),name_list=_PatTableExtract2[0],id_list=_PatTableExtract2[1];var create_object=function create_object(){return{name:null,id:null};};//try to make a func which would return {name:null,id:null} and make this return happen as many times as there are names in the name list\nvar data_fn=function data_fn(name_list,id_list){var data=[];for(var j=0;j<name_list.length;j++){data[j]=create_object();}// data[0].name=n.forEach((p)=>p)\nfor(var _j=0;_j<name_list.length;_j++){data[_j].name=name_list[_j];data[_j].id=id_list[_j];}return data;};var _React$useState=React.useState({columns:[{title:'Name',field:'name'},{title:'Unique ID',field:'id'}],data:data_fn(name_list,id_list),push:{name:null,id:null}}),_React$useState2=_slicedToArray(_React$useState,2),state=_React$useState2[0],setState=_React$useState2[1];var get_data=function get_data(push){var s=[];//console.log(\"push =\",push)\nfor(var j=0;j<name_list.length+1;j++){s[j]=create_object();}for(var _j2=0;_j2<name_list.length+1;_j2++){s[_j2].name=push[_j2].name;s[_j2].id=push[_j2].id;}//console.log(q)\nreturn s;};var get_data2=function get_data2(push){var s=[];//console.log(\"push =\",push)\nfor(var j=0;j<name_list.length;j++){s[j]=create_object();}for(var _j3=0;_j3<name_list.length;_j3++){s[_j3].name=push[_j3].name;s[_j3].id=push[_j3].id;}//console.log(q)\nreturn s;};var get_data3=function get_data3(push){var s=[];//console.log(\"push =\",push)\nfor(var j=0;j<name_list.length-1;j++){s[j]=create_object();}for(var _j4=0;_j4<name_list.length-1;_j4++){s[_j4].name=push[_j4].name;s[_j4].id=push[_j4].id;}//console.log(q)\nreturn s;};// let [state, setState] = React.useState({\n//   columns: [\n//     { title: 'Name', field: 'name' },\n//     { title: 'Unique ID', field: 'id' },\n//   ],\n//   data: [\n//     { name: 'Mehmet', id: 307 },\n//     { name: 'Zerya ',id:891},\n//     { name: 'Kumar',id:644},\n//     { name: 'Kovind19',id:6969}\n//   ],\n// });\nreturn/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(MaterialTable,{title:\"Registered Doctors\",columns:state.columns,data:state.data,options:{paging:false},editable:{onRowAdd:function onRowAdd(newData){return new Promise(function(resolve){setTimeout(function(){resolve();setState(function(prevState){var data=_toConsumableArray(prevState.data);data.push(newData);state.push=data;var s=get_data(state.push);//object to be pushed with api\nconsole.log(s);//do api request to send state.push below\nreturn _objectSpread(_objectSpread({},prevState),{},{data:data});});},600);});},onRowUpdate:function onRowUpdate(newData,oldData){return new Promise(function(resolve){setTimeout(function(){resolve();if(oldData){console.log(\"oldData: \",oldData);setState(function(prevState){var data=_toConsumableArray(prevState.data);state.push=state.data;// console.log(state.push)\n// console.log(\"new data: \",newData)\nstate.push[data.length-1]=newData;var s=get_data2(state.push);//object to be pushed\n//do api request to send state.push below\ndata[data.indexOf(oldData)]=newData;return _objectSpread(_objectSpread({},prevState),{},{data:data});});}},600);});},onRowDelete:function onRowDelete(oldData){return new Promise(function(resolve){setTimeout(function(){resolve();setState(function(prevState){var data=_toConsumableArray(prevState.data);data.splice(data.indexOf(oldData),1);console.log(\"data \",data);state.push=data;var s=get_data3(state.push);//object to pushed\n//do api request\n// console.log(\"s= \",s)\nreturn _objectSpread(_objectSpread({},prevState),{},{data:data});});},600);});}}}));}","map":{"version":3,"sources":["C:/Users/Sumanth/OneDrive/Documents/react/patient_monitor/src/components/pattable.js"],"names":["React","MaterialTable","PatTableExtract","PatTable","name_list","id_list","create_object","name","id","data_fn","data","j","length","useState","columns","title","field","push","state","setState","get_data","s","get_data2","get_data3","paging","onRowAdd","newData","Promise","resolve","setTimeout","prevState","console","log","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"wjBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,gBAA1B,CACA,OAAQC,eAAR,KAA8B,iBAA9B,CAEA,MAAQ,SAASC,CAAAA,QAAT,EAAoB,sBACFD,eAAe,EADb,sDACrBE,SADqB,sBACXC,OADW,sBAE1B,GAAIC,CAAAA,aAAa,CAAC,QAAdA,CAAAA,aAAc,EAAI,CACpB,MAAO,CAACC,IAAI,CAAC,IAAN,CAAWC,EAAE,CAAC,IAAd,CAAP,CACD,CAFD,CAGF;AACE,GAAIC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACL,SAAD,CAAWC,OAAX,CAAuB,CACnC,GAAIK,CAAAA,IAAI,CAAC,EAAT,CACA,IAAI,GAAIC,CAAAA,CAAC,CAAC,CAAV,CAAYA,CAAC,CAACP,SAAS,CAACQ,MAAxB,CAA+BD,CAAC,EAAhC,EACED,IAAI,CAACC,CAAD,CAAJ,CAAQL,aAAa,EAArB,CADF,CAEA;AACA,IAAI,GAAIK,CAAAA,EAAC,CAAC,CAAV,CAAYA,EAAC,CAACP,SAAS,CAACQ,MAAxB,CAA+BD,EAAC,EAAhC,CAAmC,CACjCD,IAAI,CAACC,EAAD,CAAJ,CAAQJ,IAAR,CAAaH,SAAS,CAACO,EAAD,CAAtB,CACAD,IAAI,CAACC,EAAD,CAAJ,CAAQH,EAAR,CAAWH,OAAO,CAACM,EAAD,CAAlB,CACD,CACD,MAAOD,CAAAA,IAAP,CACD,CAVD,CAN0B,oBAiBFV,KAAK,CAACa,QAAN,CAAe,CACrCC,OAAO,CAAE,CACP,CAAEC,KAAK,CAAE,MAAT,CAAiBC,KAAK,CAAE,MAAxB,CADO,CAEP,CAAED,KAAK,CAAE,WAAT,CAAsBC,KAAK,CAAE,IAA7B,CAFO,CAD4B,CAKrCN,IAAI,CAAED,OAAO,CAACL,SAAD,CAAWC,OAAX,CALwB,CAMrCY,IAAI,CAAC,CAACV,IAAI,CAAC,IAAN,CAAWC,EAAE,CAAC,IAAd,CANgC,CAAf,CAjBE,oDAiBrBU,KAjBqB,qBAiBdC,QAjBc,qBA0B1B,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACH,IAAD,CAAU,CACzB,GAAII,CAAAA,CAAC,CAAC,EAAN,CACA;AACA,IAAI,GAAIV,CAAAA,CAAC,CAAC,CAAV,CAAYA,CAAC,CAACP,SAAS,CAACQ,MAAV,CAAiB,CAA/B,CAAiCD,CAAC,EAAlC,EACEU,CAAC,CAACV,CAAD,CAAD,CAAKL,aAAa,EAAlB,CADF,CAEA,IAAI,GAAIK,CAAAA,GAAC,CAAC,CAAV,CAAYA,GAAC,CAACP,SAAS,CAACQ,MAAV,CAAiB,CAA/B,CAAiCD,GAAC,EAAlC,CAAqC,CACnCU,CAAC,CAACV,GAAD,CAAD,CAAKJ,IAAL,CAAUU,IAAI,CAACN,GAAD,CAAJ,CAAQJ,IAAlB,CACAc,CAAC,CAACV,GAAD,CAAD,CAAKH,EAAL,CAAQS,IAAI,CAACN,GAAD,CAAJ,CAAQH,EAAhB,CACD,CACD;AACA,MAAOa,CAAAA,CAAP,CACD,CAXD,CAYA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACL,IAAD,CAAU,CAC1B,GAAII,CAAAA,CAAC,CAAC,EAAN,CACA;AACA,IAAI,GAAIV,CAAAA,CAAC,CAAC,CAAV,CAAYA,CAAC,CAACP,SAAS,CAACQ,MAAxB,CAA+BD,CAAC,EAAhC,EACEU,CAAC,CAACV,CAAD,CAAD,CAAKL,aAAa,EAAlB,CADF,CAEA,IAAI,GAAIK,CAAAA,GAAC,CAAC,CAAV,CAAYA,GAAC,CAACP,SAAS,CAACQ,MAAxB,CAA+BD,GAAC,EAAhC,CAAmC,CACjCU,CAAC,CAACV,GAAD,CAAD,CAAKJ,IAAL,CAAUU,IAAI,CAACN,GAAD,CAAJ,CAAQJ,IAAlB,CACAc,CAAC,CAACV,GAAD,CAAD,CAAKH,EAAL,CAAQS,IAAI,CAACN,GAAD,CAAJ,CAAQH,EAAhB,CACD,CACD;AACA,MAAOa,CAAAA,CAAP,CACD,CAXD,CAYA,GAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACN,IAAD,CAAU,CAC1B,GAAII,CAAAA,CAAC,CAAC,EAAN,CACA;AACA,IAAI,GAAIV,CAAAA,CAAC,CAAC,CAAV,CAAYA,CAAC,CAACP,SAAS,CAACQ,MAAV,CAAiB,CAA/B,CAAiCD,CAAC,EAAlC,EACEU,CAAC,CAACV,CAAD,CAAD,CAAKL,aAAa,EAAlB,CADF,CAEA,IAAI,GAAIK,CAAAA,GAAC,CAAC,CAAV,CAAYA,GAAC,CAACP,SAAS,CAACQ,MAAV,CAAiB,CAA/B,CAAiCD,GAAC,EAAlC,CAAqC,CACnCU,CAAC,CAACV,GAAD,CAAD,CAAKJ,IAAL,CAAUU,IAAI,CAACN,GAAD,CAAJ,CAAQJ,IAAlB,CACAc,CAAC,CAACV,GAAD,CAAD,CAAKH,EAAL,CAAQS,IAAI,CAACN,GAAD,CAAJ,CAAQH,EAAhB,CACD,CACD;AACA,MAAOa,CAAAA,CAAP,CACD,CAXD,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,mBACE,4CACA,oBAAC,aAAD,EACE,KAAK,CAAC,oBADR,CAEE,OAAO,CAAEH,KAAK,CAACJ,OAFjB,CAGE,IAAI,CAAEI,KAAK,CAACR,IAHd,CAIE,OAAO,CAAE,CACLc,MAAM,CAAC,KADF,CAJX,CAOE,QAAQ,CAAE,CACRC,QAAQ,CAAE,kBAACC,OAAD,QACV,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAa,CACvBC,UAAU,CAAC,UAAM,CACfD,OAAO,GACPT,QAAQ,CAAC,SAACW,SAAD,CAAe,CACtB,GAAMpB,CAAAA,IAAI,oBAAOoB,SAAS,CAACpB,IAAjB,CAAV,CACAA,IAAI,CAACO,IAAL,CAAUS,OAAV,EACAR,KAAK,CAACD,IAAN,CAAWP,IAAX,CACA,GAAIW,CAAAA,CAAC,CAACD,QAAQ,CAACF,KAAK,CAACD,IAAP,CAAd,CAA2B;AAC3Bc,OAAO,CAACC,GAAR,CAAYX,CAAZ,EACA;AACA,sCAAYS,SAAZ,MAAuBpB,IAAI,CAAJA,IAAvB,GACD,CARO,CAAR,CASD,CAXS,CAWP,GAXO,CAAV,CAaD,CAdD,CADU,EADF,CAiBRuB,WAAW,CAAE,qBAACP,OAAD,CAAUQ,OAAV,QACX,IAAIP,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAa,CACvBC,UAAU,CAAC,UAAM,CACfD,OAAO,GACP,GAAIM,OAAJ,CAAa,CACTH,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAwBE,OAAxB,EACFf,QAAQ,CAAC,SAACW,SAAD,CAAe,CACtB,GAAMpB,CAAAA,IAAI,oBAAOoB,SAAS,CAACpB,IAAjB,CAAV,CACAQ,KAAK,CAACD,IAAN,CAAWC,KAAK,CAACR,IAAjB,CACA;AACA;AACAQ,KAAK,CAACD,IAAN,CAAWP,IAAI,CAACE,MAAL,CAAY,CAAvB,EAA0Bc,OAA1B,CACA,GAAIL,CAAAA,CAAC,CAACC,SAAS,CAACJ,KAAK,CAACD,IAAP,CAAf,CAA4B;AAC5B;AACAP,IAAI,CAACA,IAAI,CAACyB,OAAL,CAAaD,OAAb,CAAD,CAAJ,CAA8BR,OAA9B,CACA,sCAAYI,SAAZ,MAAuBpB,IAAI,CAAJA,IAAvB,GACD,CAVO,CAAR,CAWD,CACF,CAhBS,CAgBP,GAhBO,CAAV,CAiBD,CAlBD,CADW,EAjBL,CAqCR0B,WAAW,CAAE,qBAACF,OAAD,QACX,IAAIP,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAa,CACvBC,UAAU,CAAC,UAAM,CACfD,OAAO,GACPT,QAAQ,CAAC,SAACW,SAAD,CAAe,CACtB,GAAMpB,CAAAA,IAAI,oBAAOoB,SAAS,CAACpB,IAAjB,CAAV,CACAA,IAAI,CAAC2B,MAAL,CAAY3B,IAAI,CAACyB,OAAL,CAAaD,OAAb,CAAZ,CAAmC,CAAnC,EACAH,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAoBtB,IAApB,EACAQ,KAAK,CAACD,IAAN,CAAWP,IAAX,CACA,GAAIW,CAAAA,CAAC,CAACE,SAAS,CAACL,KAAK,CAACD,IAAP,CAAf,CAA2B;AAC3B;AACA;AACA,sCAAYa,SAAZ,MAAuBpB,IAAI,CAAJA,IAAvB,GACD,CATO,CAAR,CAUD,CAZS,CAYP,GAZO,CAAV,CAaD,CAdD,CADW,EArCL,CAPZ,EADA,CADF,CAkED","sourcesContent":["import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {PatTableExtract} from './listextractor'\r\n\r\nexport  function PatTable() {\r\n  let [name_list,id_list]=PatTableExtract();\r\n  let create_object=()=>{\r\n    return {name:null,id:null}\r\n  }\r\n//try to make a func which would return {name:null,id:null} and make this return happen as many times as there are names in the name list\r\n  let data_fn = (name_list,id_list) => {\r\n    let data=[];\r\n    for(let j=0;j<name_list.length;j++)\r\n      data[j]=create_object()\r\n    // data[0].name=n.forEach((p)=>p)\r\n    for(let j=0;j<name_list.length;j++){\r\n      data[j].name=name_list[j]\r\n      data[j].id=id_list[j]\r\n    }\r\n    return data\r\n  }\r\n  let [state, setState] = React.useState({\r\n    columns: [\r\n      { title: 'Name', field: 'name' },\r\n      { title: 'Unique ID', field: 'id' },\r\n    ],\r\n    data: data_fn(name_list,id_list),\r\n    push:{name:null,id:null}\r\n  });\r\n\r\n  const get_data = (push) => {\r\n    let s=[]\r\n    //console.log(\"push =\",push)\r\n    for(let j=0;j<name_list.length+1;j++)\r\n      s[j]=create_object()\r\n    for(let j=0;j<name_list.length+1;j++){\r\n      s[j].name=push[j].name\r\n      s[j].id=push[j].id\r\n    }\r\n    //console.log(q)\r\n    return s\r\n  }\r\n  const get_data2 = (push) => {\r\n    let s=[]\r\n    //console.log(\"push =\",push)\r\n    for(let j=0;j<name_list.length;j++)\r\n      s[j]=create_object()\r\n    for(let j=0;j<name_list.length;j++){\r\n      s[j].name=push[j].name\r\n      s[j].id=push[j].id\r\n    }\r\n    //console.log(q)\r\n    return s\r\n  }\r\n  const get_data3 = (push) => {\r\n    let s=[]\r\n    //console.log(\"push =\",push)\r\n    for(let j=0;j<name_list.length-1;j++)\r\n      s[j]=create_object()\r\n    for(let j=0;j<name_list.length-1;j++){\r\n      s[j].name=push[j].name\r\n      s[j].id=push[j].id\r\n    }\r\n    //console.log(q)\r\n    return s\r\n  }\r\n  // let [state, setState] = React.useState({\r\n  //   columns: [\r\n  //     { title: 'Name', field: 'name' },\r\n  //     { title: 'Unique ID', field: 'id' },\r\n  //   ],\r\n  //   data: [\r\n  //     { name: 'Mehmet', id: 307 },\r\n  //     { name: 'Zerya ',id:891},\r\n  //     { name: 'Kumar',id:644},\r\n  //     { name: 'Kovind19',id:6969}\r\n  //   ],\r\n  // });\r\n  \r\n\r\n\r\n  return (\r\n    <div>\r\n    <MaterialTable\r\n      title=\"Registered Doctors\"\r\n      columns={state.columns}\r\n      data={state.data}\r\n      options={{\r\n          paging:false\r\n      }}\r\n      editable={{\r\n        onRowAdd: (newData) =>\r\n        new Promise((resolve) => {\r\n          setTimeout(() => {\r\n            resolve();\r\n            setState((prevState) => {\r\n              const data = [...prevState.data];\r\n              data.push(newData);\r\n              state.push=data;\r\n              let s=get_data(state.push) //object to be pushed with api\r\n              console.log(s)\r\n              //do api request to send state.push below\r\n              return { ...prevState, data };\r\n            });\r\n          }, 600);\r\n\r\n        }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                  console.log(\"oldData: \",oldData)\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  state.push=state.data\r\n                  // console.log(state.push)\r\n                  // console.log(\"new data: \",newData)\r\n                  state.push[data.length-1]=newData;\r\n                  let s=get_data2(state.push) //object to be pushed\r\n                  //do api request to send state.push below\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.splice(data.indexOf(oldData), 1);\r\n                console.log(\"data \",data)\r\n                state.push=data\r\n                let s=get_data3(state.push)//object to pushed\r\n                //do api request\r\n                // console.log(\"s= \",s)\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n      }}\r\n    />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}